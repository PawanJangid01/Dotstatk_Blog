name: CI/CD to IIS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_PATH: Myblog.csproj
  IIS_SITE_PATH: C:\inetpub\wwwroot\Blog_pepiline
  IIS_APP_POOL: webblog

jobs:
  build-and-deploy:
    name: Build & Deploy to IIS
    runs-on: [ self-hosted, windows, x64 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build
        run: dotnet build ${{ env.PROJECT_PATH }} -c Release --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Publish directly into IIS folder
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          Import-Module WebAdministration

          $sitePath = "${{ env.IIS_SITE_PATH }}"
          $appPool  = "${{ env.IIS_APP_POOL }}"
          $timestamp = Get-Date -Format yyyyMMdd_HHmmss
          $backupDir = "C:\deploy\backups\$timestamp"

          # Backup current site files
          if (Test-Path $sitePath) {
            New-Item -ItemType Directory -Force -Path $backupDir | Out-Null
            robocopy $sitePath $backupDir /MIR /R:2 /W:2 | Out-Null
          }

          # Take app offline
          Stop-WebAppPool -Name $appPool
          Set-Content -Path (Join-Path $sitePath "app_offline.htm") -Value "Deployment in progress..."

          # Publish new build directly into IIS folder
          dotnet publish ${{ env.PROJECT_PATH }} -c Release -o $sitePath

          # Remove offline file & restart
          if (Test-Path (Join-Path $sitePath "app_offline.htm")) {
            Remove-Item -Force (Join-Path $sitePath "app_offline.htm")
          }
          Start-WebAppPool -Name $appPool

      - name: Smoke test
        shell: pwsh
        run: |
          try {
            $resp = Invoke-WebRequest -Uri "http://localhost/" -UseBasicParsing -TimeoutSec 15
            if ($resp.StatusCode -lt 200 -or $resp.StatusCode -ge 400) {
              throw "Bad status $($resp.StatusCode)"
            }
          } catch {
            throw "Smoke test failed: $_"
          }
